[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "raft-toolkit"
version = "1.0.0"
description = "RAFT (Retrieval Augmented Fine Tuning) toolkit for generating synthetic Q&A datasets"
readme = "README.md"
license = "MIT"
authors = [
    {name = "RAFT Toolkit Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.9"
dependencies = [
    "openai>=1.0.0",
    "python-dotenv",
    "pydantic>=2.0.0",
    "pathlib",
    "tqdm",
    "pandas",
    "pyarrow",
    "tiktoken",
    "pdfplumber",
    "python-pptx",
    "langchain-text-splitters",
    "sentence-transformers",
    "langchain-openai",
    "scikit-learn",
]

[project.optional-dependencies]
web = [
    "fastapi",
    "uvicorn[standard]",
    "python-multipart",
    "jinja2",
    "redis",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov",
    "pytest-mock",
    "pytest-asyncio",
    "black",
    "isort",
    "mypy",
    "bandit",
    "safety",
]

[project.scripts]
raft = "cli.main:main"
raft-web = "web.app:main"

[project.urls]
"Homepage" = "https://github.com/microsoft/raft-toolkit"
"Bug Reports" = "https://github.com/microsoft/raft-toolkit/issues"
"Source" = "https://github.com/microsoft/raft-toolkit"

[tool.setuptools.packages.find]
include = ["core*", "cli*", "web*", "tools*"]
exclude = ["tests*", "notebooks*", "templates*", "docs*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.yaml", "*.yml"]
templates = ["*.txt"]
web = ["static/*"]

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip_glob = [
    ".venv/*",
    "__pycache__/*",
    "*.egg-info/*",
    "build/*",
    "dist/*"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

# Exclude problematic directories
exclude = [
    "\\.venv",
    "__pycache__",
    "\\.git",
    "build",
    "dist",
    "\\.eggs",
    "\\.egg-info"
]
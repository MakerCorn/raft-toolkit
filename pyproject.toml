[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "raft-toolkit"
version = "0.2.0"
description = "RAFT (Retrieval Augmented Fine Tuning) toolkit for generating synthetic Q&A datasets"
readme = "README.md"
license = "MIT"
authors = [
    {name = "RAFT Toolkit Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]
requires-python = ">=3.11, <3.14"
dependencies = [
    # Core ML and AI libraries
    "openai>=1.68.2,<2.0.0",
    "transformers>=4.44.0,<5.0.0",
    "langchain-core>=0.3.0,<0.4.0",
    "langchain-openai>=0.3.0,<0.4.0",
    "langchain-community>=0.3.0,<0.4.0",
    "langchain-experimental>=0.3.0,<0.4.0",
    "langchain-text-splitters>=0.3.0,<0.4.0",
    "sentence-transformers>=2.2.0,<3.0.0",
    "scikit-learn>=1.3.0,<2.0.0",
    "nomic>=3.0.0,<4.0.0",
    # Data processing
    "datasets>=2.16.0,<3.0.0",
    "pandas>=2.0.0,<3.0.0",
    "pyarrow>=10.0.0,<16.0.0",
    "jsonlines>=4.0.0,<5.0.0",
    # Document processing
    "pypdf>=4.0.0,<5.0.0",
    "python-pptx>=0.6.0,<1.0.0",
    "pdfplumber>=0.9.0,<1.0.0",
    # Utility libraries
    "python-dotenv>=1.0.0,<2.0.0",
    "pyyaml>=6.0.0,<7.0.0",
    "coloredlogs>=15.0.0,<16.0.0",
    "tenacity>=8.2.0,<9.0.0",
    "tqdm>=4.64.0,<5.0.0",
    "tiktoken>=0.5.0,<1.0.0",
    # Core dependencies
    "pydantic>=2.0.0,<3.0.0",
    "requests>=2.31.0,<3.0.0",
]

[project.optional-dependencies]
web = [
    "fastapi>=0.109.0,<1.0.0",
    "uvicorn[standard]>=0.25.0,<1.0.0",
    "python-multipart>=0.0.6,<1.0.0",
    "aiofiles>=23.2.1,<24.0.0",
    "redis>=5.0.1,<6.0.0",
    "celery>=5.3.4,<6.0.0",
]
kubernetes = [
    "kubernetes>=29.0.0,<30.0.0",
    "jinja2>=3.1.0,<4.0.0",
    "azure-mgmt-containerservice>=30.0.0,<31.0.0",
    "google-cloud-container>=2.40.0,<3.0.0",
    "prometheus-client>=0.19.0,<1.0.0",
]
cloud = [
    # AWS Services
    "boto3>=1.34.0,<2.0.0",
    "botocore>=1.34.0,<2.0.0",
    # Azure Core Services
    "azure-identity>=1.15.0,<2.0.0",
    "azure-core>=1.30.0,<2.0.0",
    "azure-keyvault-secrets>=4.7.0,<5.0.0",
    # Azure AI and ML Services
    "azure-ai-ml>=1.13.0,<2.0.0",
    "azure-ai-evaluation>=1.0.0,<2.0.0",
    "azure-cognitiveservices-language-textanalytics>=0.2.0,<1.0.0",
    "azure-search-documents>=11.4.0,<12.0.0",
    # Azure Storage
    "azure-storage-blob>=12.19.0,<13.0.0",
    "azure-storage-queue>=12.9.0,<13.0.0",
    # Azure Resource Management
    "azure-mgmt-resource>=23.0.0,<24.0.0",
    "azure-mgmt-storage>=21.0.0,<22.0.0",
    "azure-mgmt-containerinstance>=10.1.0,<11.0.0",
    # SharePoint integration
    "requests-oauthlib>=1.3.0,<2.0.0",
    "msal>=1.24.0,<2.0.0",
    # Additional Azure services
    "promptflow-core>=1.18.0,<2.0.0",
]
tracing = [
    "opentelemetry-api>=1.22.0,<2.0.0",
    "opentelemetry-sdk>=1.22.0,<2.0.0",
    "opentelemetry-exporter-otlp>=1.22.0,<2.0.0",
    "opentelemetry-instrumentation>=0.40b0,<1.0.0",
    "structlog>=23.2.0,<24.0.0",
    "sentry-sdk>=1.40.0,<2.0.0",
    "langwatch>=0.2.0,<1.0.0",
]
dev = [
    # Testing framework
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    # HTTP testing
    "httpx<0.28,>=0.24.0",  # Version constraint for TestClient compatibility
    "respx>=0.20.0,<1.0.0",
    # Code quality and linting tools
    "flake8>=6.0.0,<7.0.0",
    "black>=23.0.0,<25.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.0.0,<2.0.0",
    # Security and code analysis
    "bandit>=1.7.0,<2.0.0",
    "safety>=3.0.0,<4.0.0",
    # Configuration linting
    "yamllint>=1.33.0,<2.0.0",
    # Development tools
    "pre-commit>=3.0.0,<4.0.0",
    "pip-tools>=7.0.0,<8.0.0",
    "twine>=4.0.0,<5.0.0",
    "build>=0.10.0,<1.0.0",
]
all = [
    "raft-toolkit[web,kubernetes,cloud,tracing,dev]",
]

[project.scripts]
raft = "cli.main:main"
raft-cli = "cli.main:main"
raft-web = "web.app:run_server"

[project.urls]
"Homepage" = "https://github.com/microsoft/raft-toolkit"
"Bug Reports" = "https://github.com/microsoft/raft-toolkit/issues"
"Source" = "https://github.com/microsoft/raft-toolkit"

[tool.setuptools.packages.find]
include = ["core*", "cli*", "web*", "tools*"]
exclude = ["tests*", "notebooks*", "templates*", "docs*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.yaml", "*.yml"]
templates = ["*.txt"]
web = ["static/*"]

[tool.black]
line-length = 120
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true
skip_glob = [
    ".venv/*",
    "__pycache__/*",
    "*.egg-info/*",
    "build/*",
    "dist/*"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

# Exclude problematic directories
exclude = [
    "\\.venv",
    "__pycache__",
    "\\.git",
    "build",
    "dist",
    "\\.eggs",
    "\\.egg-info"
]
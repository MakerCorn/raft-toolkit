version: '3.8'

services:
  raft-web:
    build:
      context: .
      target: production
    ports:
      - "8000:8000"
    environment:
      - WEB_HOST=0.0.0.0
      - WEB_PORT=8000
      - WEB_WORKERS=4
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - raft_data:/app/data
      - raft_outputs:/app/outputs
      - raft_uploads:/app/uploads
      - raft_logs:/app/logs
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      raft-web:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - production

volumes:
  raft_data:
    driver: local
  raft_outputs:
    driver: local
  raft_uploads:
    driver: local
  raft_logs:
    driver: local
  redis_data:
    driver: local